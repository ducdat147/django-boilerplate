name: "django-boilerplate-local"

services:
  database:
    container_name: database
    image: postgres
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=databaselocal
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - local-networks

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - local-networks

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - local-networks

  loki:
    container_name: loki
    image: grafana/loki
    volumes:
      - ./docker/devops/loki/loki.yaml:/etc/loki/loki.yaml
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/loki.yaml
    networks:
      - local-networks

  promtail:
    container_name: promtail
    image: grafana/promtail
    volumes:
      - ./docker/devops/promtail/docker-config.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    networks:
      - local-networks

  tempo:
    container_name: tempo
    image: grafana/tempo
    volumes:
      - ./docker/devops/tempo/tempo-local.yaml:/etc/tempo-local.yaml
    ports:
      - 3200:3200
      - 9095:9095
      - 14268:14268
      - 4318:4318
      - 4317:4317
    command: ["-config.file=/etc/tempo-local.yaml"]
    networks:
      - local-networks

  grafana:
    container_name: grafana
    image: grafana/grafana:9.5.2
    volumes:
      - ./docker/devops/grafana/datasources/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - local-networks
    depends_on:
      - loki
      - tempo

networks:
  local-networks:

volumes:
  server_data:
  rabbitmq_data:
  redis_data:
  database_data:
